version: '2.4'

volumes:
    elasticsearch_data: {}

services:
    node:
        container_name: node
        build:
            context: dockerfiles/node
        environment:
            PGID: ${PGID}
            PUID: ${PUID}
            TZ: ${TIMEZONE}
            NODE_ENV: development
            MATTERMOST_WEBHOOK_URL: ""
            RCON_HOST: minecraft
            RCON_PORT: 45575
            RCON_PASSWORD: minecraft
            AMQP_HOST: rabbitmq
        ports:
            - "80:3000"
        volumes:
            - ${APP_PATH}:/app:${CACHE_MODE}
        mem_limit: 512m

    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
        environment:
            discovery.type: single-node
            ES_JAVA_OPTS: "-Xmx256m -Xms256m"
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data
        mem_limit: 512m

    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
        environment:
            SERVER_NAME: kibana
            LOGGING_QUIET: 'true'
        ports:
            - "82:5601"
        depends_on:
            - elasticsearch
        mem_limit: 512m

    filebeat:
        container_name: filebeat
        image: docker.elastic.co/beats/filebeat:${ELK_VERSION}
        command: filebeat -e -strict.perms=false
        user: root
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /var/lib/docker:/var/lib/docker:ro
            - ./config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
        depends_on:
            - logstash
        mem_limit: 64m

    logstash:
        container_name: logstash
        image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
        environment:
            LOG_LEVEL: warn
        volumes:
            - ./config/logstash:/usr/share/logstash/pipeline
        depends_on:
            - rabbitmq
        logging:
            options:
                max-size: "50k"
                max-file: "2"
        mem_limit: 1024m

    rabbitmq:
        image: rabbitmq:management-alpine
        container_name: rabbitmq
        ports:
            - "81:15672"
        logging:
            options:
                max-size: "50k"
                max-file: "2"
        mem_limit: 512m

    # mattermost:
    #     build:
    #         context: build/mattermost
    #         args:
    #             - edition=team
    #     container_name: mattermost
    #     environment:
    #         MM_USERNAME: mattermost
    #         MM_PASSWORD: mattermost
    #         MM_DBNAME: mattermost
    #         MM_SQLSETTINGS_DRIVERNAME: mysql
    #         MM_SQLSETTINGS_DATASOURCE: mattermost:mattermost@tcp(mysql:3306)/mattermost?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s
    #         DB_HOST: mysql
    #         DB_PORT_NUMBER: 3306
    #     ports:
    #         - "83:8000"
    #     depends_on:
    #         - mysql
    #     logging:
    #         options:
    #             max-size: "50k"
    #             max-file: "2"
    #     mem_limit: 512m
    #
    # mysql:
    #     image: mariadb
    #     container_name: mysql
    #     environment:
    #         MYSQL_ROOT_PASSWORD: root
    #         MYSQL_DATABASE: mattermost
    #         MYSQL_USER: mattermost
    #         MYSQL_PASSWORD: mattermost
    #     logging:
    #         options:
    #             max-size: "50k"
    #             max-file: "2"
    #     mem_limit: 128m

    # minecraft:
    #     container_name: minecraft
    #     image: itzg/minecraft-server
    #     environment:
    #         EULA: 'TRUE'
    #         VERSION: 1.14.4
    #         TYPE: VANILLA
    #         OVERRIDE_SERVER_PROPERTIES: 'true'
    #         ONLINE_MODE: 'false'
    #         ALLOW_FLIGHT: 'true'
    #         MEMORY: 1G
    #         LEVEL_TYPE: FLAT
    #         LEVEL: world
    #         PVP: 'true'
    #         MOTD: A Vanilla Minecraft Server powered by Docker
    #         MODE: creative
    #         SEED: 0
    #         VIEW_DISTANCE: 2
    #         SPAWN_PROTECTION: 0
    #         SPAWN_MONSTERS: 'false'
    #         SPAWN_NPCS: 'false'
    #         SPAWN_ANIMALS: 'false'
    #         MAX_TICK_TIME: 60000
    #         MAX_BUILD_HEIGHT: 64
    #         SNOOPER_ENABLED: 'false'
    #         HARDCORE: 'false'
    #         GENERATE_STRUCTURES: 'false'
    #         FORCE_GAMEMODE: 'false'
    #         ENABLE_COMMAND_BLOCK: 'true'
    #         MAX_PLAYERS: 10
    #         MAX_WORLD_SIZE: 10000
    #         ALLOW_NETHER: 'true'
    #         ANNOUNCE_PLAYER_ACHIEVEMENTS: 'true'
    #         ENABLE_QUERY: 'false'
    #         ENABLE_RCON: 'true'
    #         RCON_PORT: 45575
    #         RCON_PASSWORD: minecraft
    #         OPS: shokohsc,danydoudoune
    #         DIFFICULTY: hard
    #         SERVER_NAME: minecraft
    #         SERVER_PORT: 25565
    #     logging:
    #         options:
    #             max-size: "50k"
    #             max-file: "2"
    #     mem_limit: 1024m

    telegraf: # Telegraf
        container_name: telegraf
        image: telegraf
        volumes:
            - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
        depends_on:
            # - graphite
            - elasticsearch
        logging:
            options:
                max-size: "50k"
                max-file: "2"

    # graphite: # Graphite database
    #     container_name: graphite
    #     image: graphiteapp/graphite-statsd
    #     logging:
    #         options:
    #             max-size: "50k"
    #             max-file: "2"

    peerflix:
        image: shokohsc/peerflix-server
        container_name: peerflix
        ports:
            - "83:9000"
        healthcheck:
            test: ["CMD", "curl", "-IfkLX", "GET", "https://ifconfig.co"]
            interval: 30s
            timeout: 30s
            start_period: 60s
            retries: 5
        logging:
            options:
                max-size: "50k"
                max-file: "2"
